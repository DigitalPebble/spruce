// SPDX-License-Identifier: Apache-2.0

package com.digitalpebble.spruce;

import org.apache.spark.sql.Row;
import org.apache.spark.sql.types.DataType;

/**
 * Abstraction for columns. These can be either generated by the EnrichmentModules or coming from CUR reports.
 **/
public abstract class Column {

    private final String label;
    private final DataType type;

    Column(String l, DataType t) {
        label = l;
        type = t;
    }

    /**
     * Returns the label of the column e.g. line_item_line_item_type
     **/
    public String getLabel() {
        return label;
    }

    /**
     * Returns the type of the column e.g. StringType
     **/
    public DataType getType() {
        return type;
    }

    /**
     * Utility method to get the value for the column in the row
     **/
    public double getDouble(Row r) {
        final int index = r.fieldIndex(this.label);
        return r.getDouble(index);
    }

    /**
     * Utility method to get the value for the column in the row or null if it does not exist
     **/
    public String getString(Row r) {
        final int index = r.fieldIndex(this.label);
        return r.getString(index);
    }

    /**
     * Utility method to get check that a value is non null
     **/
    public boolean isNullAt(Row r) {
        final int index = r.fieldIndex(this.label);
        return r.isNullAt(index);
    }
}

